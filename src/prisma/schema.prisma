// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum Status {
  INCOMPLETE
  CHECK
  FAIL
  SKIP
}

enum Timeframe {
  HOUR
  DAY
  WEEK
  MONTH
}

enum DayEnum {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY
}

enum TimeOfDay {
  ANY
  MORNING
  AFTERNOON
  NIGHT
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  username      String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  habits        Habit[]
}

model Area {
  id     String  @id @default(cuid())
  title  String
  habits Habit[]
}

model Habit {
  id         String    @id @default(cuid())
  title      String
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  target     Int
  timeframe  Timeframe
  frequency  String
  status     Status
  days       Day[]
  timeOfDay  TimeOfDay
  streak     History[]

  Area   Area?   @relation(fields: [areaId], references: [id])
  areaId String?

  user   User   @relation(fields: [userId], references: [id])
  userId String
}

model Day {
  id      String  @id @default(cuid())
  name    DayEnum
  Habit   Habit?  @relation(fields: [habitId], references: [id])
  habitId String?
}

model History {
  id         String   @id @default(cuid())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  status     Status
  Habit      Habit?   @relation(fields: [habitId], references: [id])
  habitId    String?
}
